<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>projectforge-webapp</artifactId>

    <parent>
        <groupId>org.projectforge</groupId>
        <artifactId>projectforge-parent</artifactId>
        <version>7.1.1</version><!-- projectforge.version -->
    </parent>

    <licenses>
        <license>
            <name>Dual license</name>
            <url>/LICENSE.txt</url>
            <comments>All rights reserved.</comments>
            <distribution>manual</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Thanx to https://medium.com/@itzgeoff/including-react-in-your-spring-boot-maven-build-ae3b8f8826e -->
        <!-- https://nodejs.org/dist -->
        <node.version>v15.14.0</node.version>
        <npm.version>7.11.2</npm.version>
        <!-- https://github.com/yarnpkg/yarn/releases -->
        <yarn.version>v1.22.10</yarn.version>
        <frontend-maven-plugin.version>1.11.3</frontend-maven-plugin.version>
    </properties>

    <build>
        <finalName>projectforge-webapp-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>
                <!-- NPM: -->
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <!-- https://stackoverflow.com/questions/60394291/error-node-modules-node-sass-command-failed -->
                    <execution>
                        <id>npm config set python2</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>config set python python2</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
                <!-- YARN: -->
                <!--executions>
                    <execution>
                        <!- - optional: you don't really need execution ids, but it looks nice in your build log. - ->
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <!- - optional: default phase is "generate-resources" - ->
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>yarn add node-sass</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>add node-sass</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <!- - optional: The default argument is actually
                            "install", so unless you need to run some other yarn command,
                            you can remove this whole <configuration> section.
                            - ->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>yarn build</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>build</arguments>
                        </configuration>
                    </execution>
                </executions-->
                <configuration>
                    <nodeVersion>${node.version}</nodeVersion>
                    <npmVersion>${npm.version}</npmVersion>
                    <yarnVersion>${yarn.version}</yarnVersion>
                    <installDirectory>${project.build.directory}</installDirectory>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <!--workingDirectory>${pom.parent.basedir}</workingDirectory-->
                </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-resources-plugin</artifactId>
              <version>3.0.1</version>
              <executions>
                <execution>
                  <id>position-react-build</id>
                  <goals>
                    <goal>copy-resources</goal>
                  </goals>
                  <phase>prepare-package</phase>
                  <configuration>
                    <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
                    <resources>
                      <resource>
                        <directory>${project.basedir}/build</directory>
                        <filtering>false</filtering>
                      </resource>
                    </resources>
                  </configuration>
                </execution>
              </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
    </dependencies>

</project>
